name: Build and test
on:
  push:
    tags:
      - '*' 
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: groups-dependency-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            groups-dependency-cache-

      - name: Build and Run test cases
        run: mvn clean install

      - name: Save the build artifact
        run: mvn -f service/pom.xml play2:dist

      - name: Store build artifact
        uses: actions/upload-artifact@v4
        with:
          name: group-service
          path: service/target/group-service-1.0.0-dist.zip
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: group-service
          path: ./service/target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_LOGIN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
   
      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./service/target
          file: ./Dockerfile
          platforms: linux/arm64
          visibility: public
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
